{"ast":null,"code":"var _jsxFileName = \"/Users/somk/Documents/GitHub/AweSum-FE/src/components/quiz/QuizModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport QuizModalFrame from './QuizModalFrame';\nimport palette from '../../styles/palette';\nimport RadioButton from '../common/RadioButton';\nimport Button from '../common/Button';\nimport { quizForm } from '../../assets/quiz/quizForm.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Col = styled.div`\n  display: flex;\n  width: 100%;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-start;\n`;\n_c = Col;\nconst Row = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  height: 80px;\n  justify-content: space-between;\n  align-items: center;\n`;\n_c2 = Row;\nconst Header = styled.div`\n  font-family: 'Roboto', sans-serif;\n  font-style: normal;\n  font-weight: bold;\n  font-size: 1.725rem;\n  line-height: 50px;\n  margin-left: 10px;\n`;\n_c3 = Header;\nconst SubHeader = styled.div`\n  font-family: 'Roboto', sans-serif;\n  font-style: normal;\n  font-weight: bold;\n  margin-top: 1.25rem;\n  margin-left: 10px;\n  margin-bottom: 10px;\n  font-size: 1rem;\n`;\n_c4 = SubHeader;\nconst Questions = styled.div`\n  font-family: 'Roboto', sans-serif;\n  font-style: normal;\n  font-weight: normal;\n  font-size: 1rem;\n  text-align: center;\n`;\n_c5 = Questions;\nconst Box = styled.div`\n  background: ${palette.pink[1]};\n  width: 75%;\n  height: 60px;\n  border-radius: 7px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n_c6 = Box;\nconst RadioBlock = styled.div`\n  width: 85px;\n  display: flex;\n  margin-right: 3rem;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-around;\n  height: 40px;\n`;\n_c7 = RadioBlock;\n\nconst SummaryModal = _ref => {\n  _s();\n\n  let {\n    _handleModal\n  } = _ref;\n  const [quiz, setQuiz] = useState(quizForm);\n\n  const _onClickQ1 = id => {\n    setQuiz({ ...quiz,\n      q1: id\n    });\n  };\n\n  const _onClickQ2 = id => {\n    setQuiz({ ...quiz,\n      q2: id\n    });\n  };\n\n  const _onClickQ3 = id => {\n    setQuiz({ ...quiz,\n      q3: id\n    });\n  };\n\n  const _onClickQ4 = id => {\n    setQuiz({ ...quiz,\n      q4: id\n    });\n  };\n\n  const _onClickQ5 = id => {\n    setQuiz({ ...quiz,\n      q5: id\n    });\n  };\n\n  const _onClickQ6 = id => {\n    setQuiz({ ...quiz,\n      q6: id\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(QuizModalFrame, {\n    _handleModal: _handleModal,\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        children: \"OX Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(SubHeader, {\n          children: \"QUESTIONS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SubHeader, {\n          style: {\n            marginRight: '3rem'\n          },\n          children: \"TRUE / FALSE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          children: \"01\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: /*#__PURE__*/_jsxDEV(Questions, {\n            children: \"W is a collection of all of the weights in our neural network, not just from one layer, but from every layer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RadioBlock, {\n          children: [/*#__PURE__*/_jsxDEV(RadioButton, {\n            checked: quiz.q1 === 1,\n            onClick: () => {\n              _onClickQ1(1);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(RadioButton, {\n            checked: quiz.q1 === 2,\n            onClick: () => {\n              _onClickQ1(2);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          children: \"02\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: /*#__PURE__*/_jsxDEV(Questions, {\n            children: \"nonlinear functions allow us to actually deal with linear data.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RadioBlock, {\n          children: [/*#__PURE__*/_jsxDEV(RadioButton, {\n            checked: quiz.q2 === 1,\n            onClick: () => {\n              _onClickQ2(1);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(RadioButton, {\n            checked: quiz.q2 === 2,\n            onClick: () => {\n              _onClickQ2(2);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          children: \"03\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: /*#__PURE__*/_jsxDEV(Questions, {\n            children: \"Using nonlinear activation functions allows neural network to approximate arbitrarily complex functions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RadioBlock, {\n          children: [/*#__PURE__*/_jsxDEV(RadioButton, {\n            checked: quiz.q3 === 1,\n            onClick: () => {\n              _onClickQ3(1);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(RadioButton, {\n            checked: quiz.q3 === 2,\n            onClick: () => {\n              _onClickQ3(2);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          children: \"04\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: /*#__PURE__*/_jsxDEV(Questions, {\n            children: \"The sigmoid function divides the space into two parts of the river because it outputs between 0 and 1.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RadioBlock, {\n          children: [/*#__PURE__*/_jsxDEV(RadioButton, {\n            checked: quiz.q4 === 1,\n            onClick: () => {\n              _onClickQ4(1);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(RadioButton, {\n            checked: quiz.q4 === 2,\n            onClick: () => {\n              _onClickQ4(2);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          children: \"05\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: /*#__PURE__*/_jsxDEV(Questions, {\n            children: \"If a parameter starts in a potentially bad part of the landscape, it can easily get stuck in local maximum.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RadioBlock, {\n          children: [/*#__PURE__*/_jsxDEV(RadioButton, {\n            checked: quiz.q5 === 1,\n            onClick: () => {\n              _onClickQ5(1);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(RadioButton, {\n            checked: quiz.q5 === 1,\n            onClick: () => {\n              _onClickQ5(1);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          children: \"06\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: /*#__PURE__*/_jsxDEV(Questions, {\n            children: \"W is a collection of all of the weights in our neural network, not just from one layer, but from every layer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RadioBlock, {\n          children: [/*#__PURE__*/_jsxDEV(RadioButton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(RadioButton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        style: {\n          justifyContent: 'flex-end',\n          height: '65px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            marginRight: '20px',\n            marginTop: '10px'\n          },\n          children: \"VIEW RESULTS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SummaryModal, \"M/L0oDIsvTgySP0XAFWySqouMm0=\");\n\n_c8 = SummaryModal;\nexport default SummaryModal;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n\n$RefreshReg$(_c, \"Col\");\n$RefreshReg$(_c2, \"Row\");\n$RefreshReg$(_c3, \"Header\");\n$RefreshReg$(_c4, \"SubHeader\");\n$RefreshReg$(_c5, \"Questions\");\n$RefreshReg$(_c6, \"Box\");\n$RefreshReg$(_c7, \"RadioBlock\");\n$RefreshReg$(_c8, \"SummaryModal\");","map":{"version":3,"sources":["/Users/somk/Documents/GitHub/AweSum-FE/src/components/quiz/QuizModal.js"],"names":["React","useEffect","useState","styled","QuizModalFrame","palette","RadioButton","Button","quizForm","Col","div","Row","Header","SubHeader","Questions","Box","pink","RadioBlock","SummaryModal","_handleModal","quiz","setQuiz","_onClickQ1","id","q1","_onClickQ2","q2","_onClickQ3","q3","_onClickQ4","q4","_onClickQ5","q5","_onClickQ6","q6","marginRight","justifyContent","height","marginTop"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport QuizModalFrame from './QuizModalFrame';\nimport palette from '../../styles/palette';\nimport RadioButton from '../common/RadioButton';\nimport Button from '../common/Button';\nimport { quizForm } from '../../assets/quiz/quizForm.js';\n\nconst Col = styled.div`\n  display: flex;\n  width: 100%;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-start;\n`;\n\nconst Row = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  height: 80px;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst Header = styled.div`\n  font-family: 'Roboto', sans-serif;\n  font-style: normal;\n  font-weight: bold;\n  font-size: 1.725rem;\n  line-height: 50px;\n  margin-left: 10px;\n`;\n\nconst SubHeader = styled.div`\n  font-family: 'Roboto', sans-serif;\n  font-style: normal;\n  font-weight: bold;\n  margin-top: 1.25rem;\n  margin-left: 10px;\n  margin-bottom: 10px;\n  font-size: 1rem;\n`;\n\nconst Questions = styled.div`\n  font-family: 'Roboto', sans-serif;\n  font-style: normal;\n  font-weight: normal;\n  font-size: 1rem;\n  text-align: center;\n`;\n\nconst Box = styled.div`\n  background: ${palette.pink[1]};\n  width: 75%;\n  height: 60px;\n  border-radius: 7px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst RadioBlock = styled.div`\n  width: 85px;\n  display: flex;\n  margin-right: 3rem;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-around;\n  height: 40px;\n`;\n\nconst SummaryModal = ({ _handleModal }) => {\n  const [quiz, setQuiz] = useState(quizForm);\n  const _onClickQ1 = (id) => {\n    setQuiz({\n      ...quiz,\n      q1: id,\n    });\n  };\n  const _onClickQ2 = (id) => {\n    setQuiz({\n      ...quiz,\n      q2: id,\n    });\n  };\n  const _onClickQ3 = (id) => {\n    setQuiz({\n      ...quiz,\n      q3: id,\n    });\n  };\n  const _onClickQ4 = (id) => {\n    setQuiz({\n      ...quiz,\n      q4: id,\n    });\n  };\n  const _onClickQ5 = (id) => {\n    setQuiz({\n      ...quiz,\n      q5: id,\n    });\n  };\n  const _onClickQ6 = (id) => {\n    setQuiz({\n      ...quiz,\n      q6: id,\n    });\n  };\n\n  return (\n    <QuizModalFrame _handleModal={_handleModal}>\n      <Col>\n        <Header>OX Quiz</Header>\n        <Row>\n          <SubHeader>QUESTIONS</SubHeader>\n          <SubHeader style={{ marginRight: '3rem' }}>TRUE / FALSE</SubHeader>\n        </Row>\n        <Row>\n          <Header>01</Header>\n          <Box>\n            <Questions>\n              W is a collection of all of the weights in our neural network, not\n              just from one layer, but from every layer\n            </Questions>\n          </Box>\n          <RadioBlock>\n            <RadioButton\n              checked={quiz.q1 === 1}\n              onClick={() => {\n                _onClickQ1(1);\n              }}\n            />\n            <RadioButton\n              checked={quiz.q1 === 2}\n              onClick={() => {\n                _onClickQ1(2);\n              }}\n            />\n          </RadioBlock>\n        </Row>\n        <Row>\n          <Header>02</Header>\n          <Box>\n            <Questions>\n              nonlinear functions allow us to actually deal with linear data.\n            </Questions>\n          </Box>\n          <RadioBlock>\n            <RadioButton\n              checked={quiz.q2 === 1}\n              onClick={() => {\n                _onClickQ2(1);\n              }}\n            />\n            <RadioButton\n              checked={quiz.q2 === 2}\n              onClick={() => {\n                _onClickQ2(2);\n              }}\n            />\n          </RadioBlock>\n        </Row>\n        <Row>\n          <Header>03</Header>\n          <Box>\n            <Questions>\n              Using nonlinear activation functions allows neural network to\n              approximate arbitrarily complex functions\n            </Questions>\n          </Box>\n          <RadioBlock>\n            <RadioButton\n              checked={quiz.q3 === 1}\n              onClick={() => {\n                _onClickQ3(1);\n              }}\n            />\n            <RadioButton\n              checked={quiz.q3 === 2}\n              onClick={() => {\n                _onClickQ3(2);\n              }}\n            />\n          </RadioBlock>\n        </Row>\n        <Row>\n          <Header>04</Header>\n          <Box>\n            <Questions>\n              The sigmoid function divides the space into two parts of the river\n              because it outputs between 0 and 1.\n            </Questions>\n          </Box>\n          <RadioBlock>\n            <RadioButton\n              checked={quiz.q4 === 1}\n              onClick={() => {\n                _onClickQ4(1);\n              }}\n            />\n            <RadioButton\n              checked={quiz.q4 === 2}\n              onClick={() => {\n                _onClickQ4(2);\n              }}\n            />\n          </RadioBlock>\n        </Row>\n        <Row>\n          <Header>05</Header>\n          <Box>\n            <Questions>\n              If a parameter starts in a potentially bad part of the landscape,\n              it can easily get stuck in local maximum.\n            </Questions>\n          </Box>\n          <RadioBlock>\n            <RadioButton\n              checked={quiz.q5 === 1}\n              onClick={() => {\n                _onClickQ5(1);\n              }}\n            />\n            <RadioButton\n              checked={quiz.q5 === 1}\n              onClick={() => {\n                _onClickQ5(1);\n              }}\n            />\n          </RadioBlock>\n        </Row>\n        <Row>\n          <Header>06</Header>\n          <Box>\n            <Questions>\n              W is a collection of all of the weights in our neural network, not\n              just from one layer, but from every layer\n            </Questions>\n          </Box>\n          <RadioBlock>\n            <RadioButton />\n            <RadioButton />\n          </RadioBlock>\n        </Row>\n        <Row style={{ justifyContent: 'flex-end', height: '65px' }}>\n          <Button style={{ marginRight: '20px', marginTop: '10px' }}>\n            VIEW RESULTS\n          </Button>\n        </Row>\n      </Col>\n    </QuizModalFrame>\n  );\n};\n\nexport default SummaryModal;\n"]},"metadata":{},"sourceType":"module"}